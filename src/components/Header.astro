<header id="navbar" class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2 transition-all duration-300 bg-transparent">
    <nav class="flex px-3 text-sm font-medium rounded-full text-gray-600 dark:text-gray-200 justify-center items-center">
      <a href="#sobre-mi" class="nav-link relative block px-2 py-2 transition hover:text-cyan-200 dark:hover:text-green-400" aria-label="sobre-mi">Sobre m√≠</a>
      <a href="#experiencia" class="nav-link relative block px-2 py-2 transition hover:text-cyan-200 dark:hover:text-green-400" aria-label="experiencia">Experiencia</a>
      <a href="#proyectos" class="nav-link relative block px-2 py-2 transition hover:text-cyan-200 dark:hover:text-green-400" aria-label="proyectos">Proyectos</a>
      <a href="mailto:danielgrjob@gmail.com" class="nav-link relative block px-2 py-2 transition hover:text-cyan-200 dark:hover:text-green-400" aria-label="contacto">Contacto</a>
    </nav>
</header>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const navbar = document.getElementById("navbar");
    const navLinks = document.querySelectorAll(".nav-link");
    const sections = document.querySelectorAll("section");

    // Ensure navbar exists
    if (navbar) {
      // Change navbar background on scroll
      window.addEventListener("scroll", function () {
        if (window.scrollY > 50) {
          navbar.classList.add("bg-gray-800", "text-white");
          navbar.classList.remove("bg-transparent");
        } else {
          navbar.classList.remove("bg-gray-800", "text-white");
          navbar.classList.add("bg-transparent");
        }
      });
    }

    // Highlight active link based on scroll
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navLinks.forEach((link) => {
            if (link.getAttribute("aria-label") === entry.target.id) {
              link.classList.add("text-green-200");
            } else {
              link.classList.remove("text-green-200");
            }
          });
        }
      });
    }, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    // Cleanup observer on tab switch
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    }
  });
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
  }

  @keyframes nav-shadown {
    to {
      @apply shadow-lg ring-1 backdrop-blur dark:bg-gray-800/90 bg-white/50 ring-white/10;
    }
  }
</style>
